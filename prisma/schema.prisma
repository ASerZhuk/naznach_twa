// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  telegramId String  @unique
  firstName String?
  lastName  String?
  chatId    String?
  username  String?
  isMaster  Boolean  @default(false)
  createdAt DateTime @default(now())
  specialist Specialist?
}

model Specialist {
  id        Int      @id @default(autoincrement())
  firstName String?
  lastName  String?
  chatId    String?
  userId    String @unique
  username  String?
  image     String?
  price     String?
  phone     String?
  category  String?
  description String?
  status String?
  address   String?
  isMaster  Boolean  @default(false)
  createdAt DateTime @default(now())
  user      User @relation(fields: [userId], references: [telegramId])
  timeSlots  TimeSlots[]
  appointments Appointments[]
  
}

model TimeSlots {
  id           Int      @id @default(autoincrement())
  specialistId String
  specialist   Specialist @relation(fields: [specialistId], references: [userId])
  dayOfWeek    Int
  startTime    String
  endTime      String
  interval     Int
  time         String[]
  grafikName   String  

}

model Appointments {
  id        Int      @id @default(autoincrement())
  clientId String
  firstName String
  lastName String
  specialistId String
  specialist   Specialist @relation(fields: [specialistId], references: [userId])
  date String
  time String
  phone String
  specialistName String?
  specialistLastName String?
  specialistAddress String?
  specialistPrice String?
  specialistPhone String?
  specialistCategory String?

}



